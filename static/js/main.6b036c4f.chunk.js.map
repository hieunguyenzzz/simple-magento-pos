{"version":3,"sources":["features/nav/NavBar.jsx","app/instant.js","app/reducers/product.js","app/reducers/index.js","app/reducers/isloading.js","app/components/Card.jsx","features/home/Product.jsx","app/firebase/database.js","app/action/index.js","features/home/HomePage.jsx","features/checkout/SideBar/Index.jsx","features/checkout/Step/Address.jsx","features/checkout/Step/BillingAddress.jsx","features/checkout/Step/ShippingAddress.jsx","features/checkout/Step/Payment/Stripe.jsx","features/checkout/Step/Payment.jsx","features/checkout/ButtonPlaceOrder.jsx","features/checkout/Index.jsx","app/layout/App.jsx","serviceWorker.js","app/store.js","index.js"],"names":["NavBar","react_default","a","createElement","Fragment","Menu","fixed","Container","Item","header","as","Link","to","position","name","NavLink","Icon","Label","color","Component","withRouter","ENTITY_PRODUCT","product","combineReducers","byId","state","arguments","length","undefined","action","type","nextState","products","forEach","item","id","data","allId","concat","Object","toConsumableArray","filter","productId","getFilteredProduct","map","productReducer","RootReducer","isloading","ProductCard","_this$props","this","props","images","price","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","Card","Content","Image","src","extra","className","Divider","format","Button","floated","connect","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","firestore","saveProduct","querySnap","loadingBeginning","loadingFinish","HomePage","activePage","_this","handlePaginationChange","e","_ref","setState","history","push","fetchData","Segment","Input","fluid","size","icon","placeholder","Checkbox","label","Group","Product","assign","key","Pagination","totalPages","onPageChange","React","ownProps","match","params","pagination","dispatch","entity","page","collection","orderBy","limit","get","then","_","slice","docs","Index","countryDropdown","Dropdown","search","selection","options","value","flag","text","stateDropdown","Address","title","Header","Form","width","Field","control","BillingAddress","Step_Address","ShipingAddressCheckBoxes","sameAddressOnlick","defaultChecked","onChange","ShippingAddress","isShippingSameWithBilling","handleShippingAddressSameWithBilling","ShippingAddress_ShipingAddressCheckBoxes","StripePay","enable","handleScriptLoaded","card","Stripe","elements","create","on","mount","enableMethod","lib_default","url","onLoad","onClick","display","Payment","Payment_Stripe","ButtonPlaceOrder","Grid","Column","Step_BillingAddress","Step_ShippingAddress","Step_Payment","checkout_ButtonPlaceOrder","SideBar_Index","App","Route","path","render","nav_NavBar","Dimmer","inverted","active","Loader","Switch","exact","component","Checkout","Boolean","window","location","hostname","thunk","store","next","preloadState","middleWares","storeEnhancer","applyMiddleware","apply","composedEnhancer","composeWithDevTools","createStore","configureStore","ReactDOM","es","BrowserRouter","layout_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b036c4f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Menu, Label, Icon, Container} from \"semantic-ui-react\";\nimport {Link, NavLink, withRouter} from \"react-router-dom\";\n\nclass  NavBar extends Component {\n    render() {\n        return (\n            <>\n                <Menu fixed=\"top\">\n                    <Container>\n                        <Menu.Item header as={Link} to=\"/\">\n                            Magento PWA\n                        </Menu.Item>\n\n                        <Menu.Item position=\"right\"\n                                   name='video camera'\n                                   as={NavLink} to=\"/checkout\"\n                        >\n                            <Icon name='cart' />\n\n                            <Label color='teal'>1</Label>\n                        </Menu.Item>\n                    </Container>\n                </Menu>\n            </>\n        );\n    }\n\n}\n\nexport default withRouter(NavBar);","// actions\nexport const FETCH_PRODUCT = 'FETCH_PRODUCT'\nexport const SAVE_PRODUCT = 'SAVE_PRODUCT';\nexport const SEARCH = 'SEARCH';\nexport const LOADING_BEGIN = 'LOADING_BEGIN'\nexport const LOADING_FINISH = 'LOADING_FINISH'\n\n// product filter\nexport const ACTIVE = 'ACTIVE';\n\n// entity list\nexport const ENTITY_PRODUCT = 'product';\n\n//other\nexport const MAGENTO_PRODUCT_MEDIA_PATH = 'http://magento.m2.hieunguyen.work/media/catalog/product/';\nexport const ITEM_PER_PAGE = 10;","import {ACTIVE, FETCH_PRODUCT, SAVE_PRODUCT} from \"../instant\";\nimport {combineReducers} from \"redux\";\n\nconst byId = (state = {}, action) => {\n    switch (action.type) {\n        case SAVE_PRODUCT:\n            const nextState = {};\n            action.products.forEach(item => {\n                nextState[item.id] = item.data()\n            });\n\n            return nextState;\n        default:\n            return state\n    }\n}\n\nconst allId = (state = [], action) => {\n    switch (action.type) {\n        case SAVE_PRODUCT:\n            let nextState = [];\n            action.products.forEach(item => {\n                nextState = [...nextState.filter(productId => productId !== item.id), item.id];\n            });\n\n            return nextState;\n        default:\n            return state\n    }\n}\n\nconst total = (state = 0, action) => {\n\n}\n\nconst lastProduct = (state = null, action) => {\n    switch (action.type) {\n        case SAVE_PRODUCT:\n            return action.products[action.response.length - 1];\n        default:\n            return state\n    }\n}\n\n// @todo: apply filter\nexport const getFilteredProduct = (product, filter = ACTIVE) => {\n    return product.allId.map(productId => product.byId[productId]);\n}\n\nexport const getTotalPage = (product) => {\n\n}\n\nexport const product = combineReducers({\n    byId,\n    allId,\n    //lastProduct // for pagination\n})\n\n","import {combineReducers} from \"redux\";\nimport * as productReducer from \"./product\";\nimport {ACTIVE} from \"../instant\";\nimport {isloading} from \"./isloading\";\n\nexport const getFilteredProduct = (state, filter = ACTIVE) => {\n    return productReducer.getFilteredProduct(state.product, filter);\n}\n\nconst RootReducer = combineReducers({\n    product: productReducer.product,\n    isloading\n})\n\nexport default RootReducer;","import {LOADING_BEGIN, LOADING_FINISH} from \"../instant\";\n\nexport const isloading = (state = false, action) => {\n    switch (action.type) {\n        case LOADING_BEGIN:\n            return true\n        case LOADING_FINISH:\n            return false\n        default:\n            return state\n    }\n}","import React, {Component} from 'react';\nimport {Card, Divider, Icon} from 'semantic-ui-react';\nimport {Image} from \"semantic-ui-react\";\nimport {Button} from \"semantic-ui-react\";\nimport {MAGENTO_PRODUCT_MEDIA_PATH} from \"../instant\";\n\n\nclass ProductCard extends Component {\n    render() {\n        const {name, images, price} = this.props;\n        const formatter = new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD',\n            minimumFractionDigits: 2\n        })\n\n        return (\n            <Card>\n                <Card.Content>\n                    <Image src={MAGENTO_PRODUCT_MEDIA_PATH + images} />\n                </Card.Content>\n                <Card.Content extra>\n\n                    <p className=\"product-name\">{name}</p>\n                    <p>Tan Side Crossbody Sling Bag</p>\n                    <Divider />\n                    <p className=\"product-price\"><Icon name='tag' /><strong>{formatter.format(price)}</strong>\n                        <Button floated='right'><Icon name='shop'  />Add To Cart</Button>\n                    </p>\n\n                </Card.Content>\n            </Card>\n        )\n    }\n\n}\n\nexport default ProductCard;","import {connect} from 'react-redux';\nimport ProductCard from \"../../app/components/Card\";\n\nexport default connect()(ProductCard);","import firebase from 'firebase';\n\nlet config = {\n    apiKey: \"AIzaSyALDp1pejHDw4Ry1erXajPiIz-BWcVZJQ8\",\n    authDomain: \"magento-catalog-test-a5554.firebaseapp.com\",\n    databaseURL: \"https://magento-catalog-test-a5554.firebaseio.com\",\n    projectId: \"magento-catalog-test-a5554\",\n    storageBucket: \"magento-catalog-test-a5554.appspot.com\",\n    messagingSenderId: \"644925185069\"\n};\nfirebase.initializeApp(config);\n\nconst database = firebase.firestore();\n\n// Get a reference to the database service\nexport default database;\n","import database from '../firebase/database'\nimport {ITEM_PER_PAGE, LOADING_BEGIN, LOADING_FINISH, SAVE_PRODUCT} from \"../instant\";\nimport _ from 'lodash';\n\nexport const fetchData = (entity, page) => dispatch => {\n    dispatch(loadingBeginning());\n\n    database.collection(entity).orderBy('id').limit(page * ITEM_PER_PAGE).get().then((querySnap) => {\n            dispatch(saveProduct(_.slice(querySnap.docs, (page-1) * ITEM_PER_PAGE)));\n            dispatch(loadingFinish());\n        }\n    )\n}\n\n\nexport const saveProduct = (querySnap) => ({\n    type: SAVE_PRODUCT,\n    products: querySnap\n})\n\nexport const loadingBeginning = () => ({\n    type: LOADING_BEGIN\n})\n\nexport const loadingFinish = () => ({\n    type: LOADING_FINISH\n})","import React from 'react';\nimport {Card, Checkbox, Dimmer, Input, Loader, Pagination, Segment} from \"semantic-ui-react\";\nimport {getFilteredProduct} from '../../app/reducers/index';\nimport {connect} from 'react-redux';\nimport Product from \"./Product\";\nimport {fetchData} from \"../../app/action\";\nimport {ENTITY_PRODUCT} from \"../../app/instant\";\n\nconst mapStateToProps = (state, ownProps) => ({\n    products: getFilteredProduct(state),\n    activePage: ownProps.match.params.pagination || 1,\n\n})\n\nconst mapActionToProps = (dispatch) => {\n    return {\n        fetchData: (entity, activePage) => dispatch(fetchData(entity, activePage)),\n    }\n}\n\nclass HomePage extends React.Component {\n    state = {\n        activePage: this.props.activePage\n    }\n\n    componentDidMount() {\n        const {fetchData, activePage} = this.props;\n        fetchData(ENTITY_PRODUCT, activePage);\n    }\n\n    handlePaginationChange = (e, {activePage}) => {\n        this.setState({activePage})\n        this.props.history.push('/listing/page/' + activePage);\n        const {fetchData} = this.props;\n        fetchData(ENTITY_PRODUCT, activePage);\n    }\n\n    render() {\n        const {products} = this.props;\n        return <>\n            <Segment>\n                <Input fluid size='huge' icon='search' placeholder='Search...'/>\n\n                <Checkbox label='Make my profile visible'/>\n            </Segment>\n            <Segment>\n                <Card.Group>\n                    {products.map(product => {\n                        return <Product key={product.id} {...product} />\n                    })}\n                </Card.Group>\n\n                <Pagination\n                    activePage={this.state.activePage}\n                    totalPages={5}\n                    onPageChange={this.handlePaginationChange}\n                />\n            </Segment>\n\n\n        </>\n    }\n}\n\nexport default connect(mapStateToProps, mapActionToProps)(HomePage);","import {} from 'semantic-ui-react';\n\nconst Index = () => {\n    return 'this is sidebar'\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {} from 'semantic-ui-react';\nimport {Form} from \"semantic-ui-react\";\nimport {Dropdown} from \"semantic-ui-react\";\nimport {Header} from \"semantic-ui-react\";\n\nconst countryDropdown = () => {\n    const countryoptions = [ { key: 'us', value: 'us', flag: 'us', text: 'United State' }]\n    return <Dropdown placeholder='select country' fluid search selection options={countryoptions} />\n};\n\nconst stateDropdown = () => {\n    const stateoptions = [ { key: 'ca', value: 'ca', text: 'California' }]\n    return <Dropdown placeholder='select state' fluid search selection options={stateoptions} />\n}\n\n\nconst Address = ({title}) => {\n    return <>\n        <Header as='h4'>{title}</Header>\n        <Form width={16}>\n            <Form.Group >\n                <Form.Input fluid label='First name' placeholder='First name' width={8} />\n                <Form.Input fluid label='Last name' placeholder='Last name' width={8} />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Input label='Email' placeholder='joe@schmoe.com' />\n            </Form.Group>\n            <Form.Group>\n                <Form.Input label='Address' placeholder='1234 Main st' />\n            </Form.Group>\n            <Form.Group>\n                <Form.Input label='Address 2 (Optional)' placeholder='Apartment or suite' />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Field label=\"Country\" control={countryDropdown} width={6} />\n                <Form.Field label=\"State\" control={stateDropdown}  width={6} />\n                <Form.Input label='Zip' placeholder='Zip' />\n            </Form.Group>\n        </Form>\n    </>;\n}\n\n\nexport default Address;","import React, {Component} from 'react';\nimport {} from 'semantic-ui-react';\nimport Address from \"./Address\";\n\nconst BillingAddress = () => {\n    return <Address title=\"Billing Address\" />\n}\n\nexport default BillingAddress;","import React, {Component} from 'react';\nimport {} from 'semantic-ui-react';\nimport Address from \"./Address\";\nimport {Checkbox} from \"semantic-ui-react\";\nimport {Form} from \"semantic-ui-react\";\n\nconst ShipingAddressCheckBoxes = ({sameAddressOnlick}) => {\n    return (\n        <>\n            <Form>\n                <Form.Field>\n                    <Checkbox label='shipping address is the same as my billing address' defaultChecked onChange={sameAddressOnlick()}/>\n                </Form.Field>\n                <Form.Field>\n                    <Checkbox label='save this information for next time'/>\n                </Form.Field>\n\n            </Form>\n\n        </>\n    );\n}\n\nclass ShippingAddress extends Component {\n    state = {\n        isShippingSameWithBilling: true\n    }\n\n    handleShippingAddressSameWithBilling = () => () => {\n        this.setState({isShippingSameWithBilling: !this.state.isShippingSameWithBilling})\n    }\n\n    render() {\n        return (\n            <>\n                <ShipingAddressCheckBoxes sameAddressOnlick={this.handleShippingAddressSameWithBilling} />\n                {!this.state.isShippingSameWithBilling && <Address title=\"Shipping Address\"/>}\n\n            </>\n        )\n    }\n}\n\nexport default ShippingAddress;","import React, {Component} from 'react';\nimport {} from 'semantic-ui-react';\nimport {Checkbox} from \"semantic-ui-react\";\nimport Script from 'react-load-script'\nimport {loadingBeginning, loadingFinish} from \"../../../../app/action\";\nimport {connect} from 'react-redux';\n\nconst mapActionToProps = (dispatch) => ({\n    loadingBeginning,\n    loadingFinish\n})\n\nclass StripePay extends Component {\n    state = {\n        enable: false\n    }\n\n    handleScriptLoaded = () => {\n        const {loadingFinish, loadingBeginning} = this.props;\n\n// eslint-disable-next-line no-undef\n        const stripe = Stripe('pk_test_9PI6CEbDOXvLg8VWiBMdn8qg');\n\n        // Create an instance of Elements.\n        const elements = stripe.elements();\n\n        // Create an instance of the card Element.\n        const card = elements.create('card');\n        loadingBeginning();\n        card.on('ready', () => loadingFinish());\n        // Add an instance of the card Element into the `card-element` <div>.\n        card.mount('#stripe-wrapper');\n\n    }\n\n    enableMethod = () => () => {\n        this.setState({enable: !this.state.enable});\n    }\n\n    render() {\n        return (\n            <>\n                <Script\n                    url=\"https://js.stripe.com/v3/\"\n                    onLoad={this.handleScriptLoaded}\n                />\n                <Checkbox label=\"Stripe\" onClick={this.enableMethod()}/>\n                <div id={\"stripe-wrapper\"} style={{display: !this.state.enable ? \"none\" : ''}} />\n\n            </>\n        )\n    }\n}\n\nexport default connect(mapActionToProps)(StripePay);","import React, {Component} from 'react';\nimport {} from 'semantic-ui-react';\nimport {Header} from \"semantic-ui-react\";\nimport Stripe from \"./Payment/Stripe\";\n\nconst Payment = () => {\n    return (\n        <>\n            <Header as='h4'>Payment Method</Header>\n            <Stripe />\n        </>\n    )\n\n\n}\n\nexport default Payment;","import React, {Component} from 'react';\nimport {} from 'semantic-ui-react';\n\nconst ButtonPlaceOrder = () => {\n    return 'Button here';\n}\n\nexport default ButtonPlaceOrder;","import React, {Component} from 'react';\nimport {Divider, Grid} from \"semantic-ui-react\";\nimport SideBar from \"./SideBar/Index\";\nimport BillingAddress from \"./Step/BillingAddress\";\nimport ShippingAddress from \"./Step/ShippingAddress\";\nimport Payment from \"./Step/Payment\";\nimport ButtonPlaceOrder from \"./ButtonPlaceOrder\";\n\nclass Index extends Component {\n\n    render() {\n        return (\n            <>\n                <Grid>\n                    <Grid.Column width={10}>\n                        <BillingAddress />\n                        <Divider />\n                        <ShippingAddress/>\n                        <Divider />\n                        <Payment/>\n                        <Divider />\n                        <ButtonPlaceOrder />\n                    </Grid.Column>\n                    <Grid.Column width={6}>\n                        <SideBar />\n                    </Grid.Column>\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport {Container, Dimmer, Loader} from \"semantic-ui-react\";\nimport HomePage from \"../../features/home/HomePage\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Checkout from '../../features/checkout/Index'\nimport {connect} from 'react-redux';\n\nconst mapStateToProp = (state) => ({\n    isloading: state.isloading\n})\n\nclass App extends Component {\n    render() {\n        const {isloading} = this.props;\n        return (\n            <>\n                <Route path=\"/(.*)\" render={() => (\n                    <>\n                        <NavBar/>\n                        <Container className=\"main\">\n                            <Dimmer inverted active={isloading}>\n                                <Loader />\n                            </Dimmer>\n                            <Switch>\n                                <Route exact path=\"/\" component={HomePage}/>\n                                <Route path=\"/listing/page/:pagination/:itemperpage?\" component={HomePage}/>\n                                <Route path=\"/checkout\" component={Checkout}/>\n                            </Switch>\n                        </Container>\n                    </>\n                )}>\n                </Route>\n            </>\n        );\n    }\n}\n\nexport default connect(mapStateToProp)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore, applyMiddleware} from 'redux';\nimport RootReducer from './reducers/index'\nimport {composeWithDevTools} from 'redux-devtools-extension';\n\nconst thunk = (store) => (next) => (action) => {\n    if (typeof action === 'function') {\n        return action(store.dispatch)\n    }\n    return next(action);\n\n}\n\nconst logging = (store) => (next) => (action) => {\n    console.log(action);\n    return next(action);\n}\n\nconst configureStore = (preloadState) => {\n    const middleWares = [thunk];\n    const middlewareEnhancer = applyMiddleware(...middleWares);\n\n    const storeEnhancer = [middlewareEnhancer];\n\n    const composedEnhancer = composeWithDevTools(...storeEnhancer);\n\n    return createStore(RootReducer, preloadState, composedEnhancer);\n}\n\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport configureStore from './app/store';\nimport {Provider} from \"react-redux\";\n\nconst store = configureStore();\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}